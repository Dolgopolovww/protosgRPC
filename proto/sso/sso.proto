syntax = "proto3";

package auth; // пространство имён (нужно для структур и сервиса)

// строка задаёт имя и структуру (<модуль>.<подпакет>.<версия>.<имя_пакета>) Go-пакета, в который будет сгенерирован код из .proto файла
// tuzov - название проекта, модуля, команды и т.п.
// sso - название компонента (например Single sign-on)
// v1 - версия api (ВАЖНО)
// ssov1 - навзавние самого го проекта в которому будет сгенерирован код
// Это будет значить:
// Пакет внутри *.pb.go файлов будет называться ssov1
// То есть ты будешь писать import ssov1 "...", и всё внутри будет ssov1.TypeName
option go_package = "tuzov.sso.v1.ssov1";

service Auth{
  rpc Register (RegisterRequest) returns (RegisterResponse); // регистрация пользователя
  rpc Login (LoginRequest) returns (LoginResponse); // логин пользователя
  rpc IsAdmin (IsAdminRequest) returns (IsAdminResponse); //
}



// Это структуры данных, которые будут передаваться между клиентом и сервером — как параметры запроса и ответа
message RegisterRequest{
  string email = 1;
  string password = 2;
}

message RegisterResponse{
  int64 user_id = 1;
}

message LoginRequest{
  string email = 1;
  string password = 2;
  int32 app_id = 3; // id приложения в который пользователь логиниться
}
message LoginResponse{
  string token = 1;
}

message IsAdminRequest {
  int64 user_id = 1;
}
message IsAdminResponse {
  bool is_admin = 1;
}